PERSON,ANSWER
P1,"In my view the bad practices of (1) using external tools in the default configuration and (2) committing modifications before fixing a previous faulty build are the most serious. This is because (1) using external tools (for static analysis, for example) in the configurations can lead to a build that is either too strict or too light for the project, either way not reflecting the needs of the project which will certainly harm the quality of the software, and (2) committing modifications without first fixing the errors reported by a previous build will lead to a picture of depreciation of the quality attributes of the software."
P2,"I believe that the most critical software bad practices are those involving failures not handled properly (such as when a pipeline succeeds even when a task fails or an error is thrown), poor separation of responsibilities (such as when the CI server hardware is used for purposes other than running the CI framework or when outputs from different jobs are mixed together) data security (such as when there is no rollback strategy or when authentication data is stored in source code in the version control system) and high complexity in development (such as when the pipeline steps are not properly ordered or when tests are not fully automated leading to a non-reproducible build)."
P3,"Cohesion, Size and Complexity"
P4,"The lack of constant refactoring, to keep the current code within good programming practices."
P5,The bad practices related to Size and Complexity.
P6,"User god, classes highly dependent on each other and no versioning of project changes in the branches. "
P7,"Tasks are not so divided into steps, which makes the changes larger and can generate many divergences at the time of integration and the low quantity of automated tests and programming with nullsafe, which can generate several problems, including the need for future changes to give rollback or fix a problem generated by something that was not handled correctly."
P8,-
P9,"Ignoring ""small and irrelevant"" errors that may arise during the execution of a test pipeline. Ignoring things like this can lead to more severe errors later and with a solution that can affect different parts of the software, making the process more complex and time-consuming."